{"version":3,"sources":["webpack:///./node_modules/vuetify/lib/components/VGrid/VRow.js","webpack:///./node_modules/vuetify/lib/components/VGrid/VCol.js","webpack:///./src/views/pages/develop/Index.vue?5cf0","webpack:///./src/views/pages/develop/Index.vue?623b","webpack:///src/views/pages/develop/Index.vue","webpack:///./src/views/pages/develop/Index.vue?6f9b","webpack:///./src/views/pages/develop/Index.vue?6b2f","webpack:///./node_modules/codemirror/mode/javascript/javascript.js"],"names":["breakpoints","ALIGNMENT","makeProps","prefix","def","reduce","props","val","alignValidator","str","includes","alignProps","type","String","default","validator","justifyValidator","justifyProps","alignContentValidator","alignContentProps","propMap","align","Object","keys","justify","alignContent","classMap","breakpointClass","prop","className","breakpoint","replace","toLowerCase","cache","Map","extend","name","functional","tag","dense","Boolean","noGutters","h","data","children","cacheKey","classList","get","forEach","value","push","set","staticClass","class","breakpointProps","Number","offsetProps","orderProps","col","offset","order","cols","alignSelf","parent","hasColClasses","some","startsWith","render","_vm","this","_h","$createElement","_c","_self","staticStyle","attrs","model","callback","$$v","expression","_l","item","i","key","domProps","_s","icon","text","_v","cmOptions","code","staticRenderFns","components","methods","openDetail","$refs","detail","open","component","VBtn","VCol","VContainer","VIcon","VList","VListItem","VListItemContent","VListItemGroup","VListItemIcon","VListItemTitle","VRow","mod","CodeMirror","defineMode","config","parserConfig","content","indentUnit","statementIndent","jsonldMode","jsonld","jsonMode","json","isTS","typescript","wordRE","wordCharacters","keywords","kw","style","A","B","C","D","operator","atom","isOperatorChar","isJsonldKeyword","readRegexp","stream","next","escaped","inSet","ret","tp","cont","tokenBase","state","ch","tokenize","tokenString","match","test","eat","tokenComment","skipToEnd","expressionAllowed","current","tokenQuasi","peek","eatWhile","string","slice","start","lexical","word","lastType","propertyIsEnumerable","quote","maybeEnd","brackets","findFatArrow","fatArrowAt","arrow","indexOf","m","exec","index","depth","sawSomething","pos","charAt","bracket","atomicTypes","JSLexical","indented","column","prev","info","inScope","varname","v","localVars","cx","context","vars","parseJS","cc","marked","hasOwnProperty","combinator","length","pop","statement","lex","pass","arguments","apply","inList","list","register","block","newContext","registerVarScoped","Var","globalVars","inner","Context","isModifier","defaultVars","pushcontext","pushblockcontext","popcontext","pushlex","result","indent","outer","poplex","expect","wanted","exp","vardef","parenExpr","maybeexpression","maybeelse","functiondef","forspec","enumdef","typename","typeexpr","pattern","maybelabel","maybeCatchBinding","afterExport","afterImport","funarg","expressionInner","expressionNoComma","noComma","body","arrowBodyNoComma","arrowBody","commasep","maybeop","maybeoperatorNoComma","maybeoperatorComma","classExpression","arrayLiteral","contCommasep","objprop","quasi","maybeTarget","me","expr","property","backUp","continueQuasi","targetNoComma","target","maybeTypeArgs","_","getterSetter","afterprop","maybetype","what","end","sep","proceed","maybetypeOrIn","mayberettype","isKW","afterType","typeprop","typearg","maybeReturnType","functiondecl","typeparam","maybeTypeDefault","maybeAssign","vardefCont","eltpattern","proppattern","_type","forspec1","forspec2","classNameAfter","classBody","classfield","isInterface","maybeFrom","exportField","importSpec","maybeMoreImports","maybeAs","enummember","isContinuedStatement","textAfter","startState","basecolumn","token","sol","indentation","eatSpace","Pass","top","firstChar","c","closing","doubleIndentSwitch","electricInput","blockCommentStart","blockCommentEnd","blockCommentContinue","lineComment","fold","closeBrackets","helperType","skipExpression","registerHelper","defineMIME"],"mappings":"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","file":"static/js/chunk-7a427a48.f9c8285a.js","sourcesContent":["import \"../../../src/components/VGrid/VGrid.sass\";\nimport Vue from 'vue';\nimport mergeData from '../../util/mergeData';\nimport { upperFirst } from '../../util/helpers'; // no xs\n\nconst breakpoints = ['sm', 'md', 'lg', 'xl'];\nconst ALIGNMENT = ['start', 'end', 'center'];\n\nfunction makeProps(prefix, def) {\n  return breakpoints.reduce((props, val) => {\n    props[prefix + upperFirst(val)] = def();\n    return props;\n  }, {});\n}\n\nconst alignValidator = str => [...ALIGNMENT, 'baseline', 'stretch'].includes(str);\n\nconst alignProps = makeProps('align', () => ({\n  type: String,\n  default: null,\n  validator: alignValidator\n}));\n\nconst justifyValidator = str => [...ALIGNMENT, 'space-between', 'space-around'].includes(str);\n\nconst justifyProps = makeProps('justify', () => ({\n  type: String,\n  default: null,\n  validator: justifyValidator\n}));\n\nconst alignContentValidator = str => [...ALIGNMENT, 'space-between', 'space-around', 'stretch'].includes(str);\n\nconst alignContentProps = makeProps('alignContent', () => ({\n  type: String,\n  default: null,\n  validator: alignContentValidator\n}));\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps)\n};\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content'\n};\n\nfunction breakpointClass(type, prop, val) {\n  let className = classMap[type];\n\n  if (val == null) {\n    return undefined;\n  }\n\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '');\n    className += `-${breakpoint}`;\n  } // .align-items-sm-center\n\n\n  className += `-${val}`;\n  return className.toLowerCase();\n}\n\nconst cache = new Map();\nexport default Vue.extend({\n  name: 'v-row',\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String,\n      default: null,\n      validator: alignValidator\n    },\n    ...alignProps,\n    justify: {\n      type: String,\n      default: null,\n      validator: justifyValidator\n    },\n    ...justifyProps,\n    alignContent: {\n      type: String,\n      default: null,\n      validator: alignContentValidator\n    },\n    ...alignContentProps\n  },\n\n  render(h, {\n    props,\n    data,\n    children\n  }) {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = '';\n\n    for (const prop in props) {\n      cacheKey += String(props[prop]);\n    }\n\n    let classList = cache.get(cacheKey);\n\n    if (!classList) {\n      classList = []; // Loop through `align`, `justify`, `alignContent` breakpoint props\n\n      let type;\n\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value = props[prop];\n          const className = breakpointClass(type, prop, value);\n          if (className) classList.push(className);\n        });\n      }\n\n      classList.push({\n        'no-gutters': props.noGutters,\n        'row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent\n      });\n      cache.set(cacheKey, classList);\n    }\n\n    return h(props.tag, mergeData(data, {\n      staticClass: 'row',\n      class: classList\n    }), children);\n  }\n\n});\n//# sourceMappingURL=VRow.js.map","import \"../../../src/components/VGrid/VGrid.sass\";\nimport Vue from 'vue';\nimport mergeData from '../../util/mergeData';\nimport { upperFirst } from '../../util/helpers'; // no xs\n\nconst breakpoints = ['sm', 'md', 'lg', 'xl'];\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false\n    };\n    return props;\n  }, {});\n})();\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n})();\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n})();\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps)\n};\n\nfunction breakpointClass(type, prop, val) {\n  let className = type;\n\n  if (val == null || val === false) {\n    return undefined;\n  }\n\n  if (prop) {\n    const breakpoint = prop.replace(type, '');\n    className += `-${breakpoint}`;\n  } // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n\n\n  if (type === 'col' && (val === '' || val === true)) {\n    // .col-md\n    return className.toLowerCase();\n  } // .order-md-6\n\n\n  className += `-${val}`;\n  return className.toLowerCase();\n}\n\nconst cache = new Map();\nexport default Vue.extend({\n  name: 'v-col',\n  functional: true,\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String,\n      default: null,\n      validator: str => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str)\n    },\n    tag: {\n      type: String,\n      default: 'div'\n    }\n  },\n\n  render(h, {\n    props,\n    data,\n    children,\n    parent\n  }) {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = '';\n\n    for (const prop in props) {\n      cacheKey += String(props[prop]);\n    }\n\n    let classList = cache.get(cacheKey);\n\n    if (!classList) {\n      classList = []; // Loop through `col`, `offset`, `order` breakpoint props\n\n      let type;\n\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value = props[prop];\n          const className = breakpointClass(type, prop, value);\n          if (className) classList.push(className);\n        });\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('col-'));\n      classList.push({\n        // Default to .col if no other col-{bp}-* classes generated nor `cols` specified.\n        col: !hasColClasses || !props.cols,\n        [`col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf\n      });\n      cache.set(cacheKey, classList);\n    }\n\n    return h(props.tag, mergeData(data, {\n      class: classList\n    }), children);\n  }\n\n});\n//# sourceMappingURL=VCol.js.map","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Index.vue?vue&type=style&index=0&id=646ea93c&lang=less&scoped=true&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Index.vue?vue&type=style&index=0&id=646ea93c&lang=less&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_c('v-row',{staticStyle:{\"height\":\"calc(100vh - 150px)\"}},[_c('v-col',{attrs:{\"cols\":\"2\"}},[_c('v-list',[_c('v-list-item-group',{model:{value:(_vm.model),callback:function ($$v) {_vm.model=$$v},expression:\"model\"}},_vm._l((_vm.items),function(item,i){return _c('v-list-item',{key:i},[_c('v-list-item-icon',[_c('v-icon',{domProps:{\"textContent\":_vm._s(item.icon)}})],1),_c('v-list-item-content',[_c('v-list-item-title',{domProps:{\"textContent\":_vm._s(item.text)}})],1)],1)}),1)],1)],1),_c('v-col',{staticStyle:{\"position\":\"relative\",\"height\":\"100%\"},attrs:{\"cols\":\"10\"}},[_c('div',{staticClass:\"button-area\"},[_c('v-btn',{attrs:{\"small\":\"\",\"color\":\"primary\"}},[_vm._v(\"Save\")]),_c('v-btn',{attrs:{\"small\":\"\",\"color\":\"primary\"}},[_vm._v(\"BackTest\")])],1),_c('div',{staticClass:\"code\"},[_c('codemirror',{staticStyle:{\"height\":\"100%\"},attrs:{\"options\":_vm.cmOptions},model:{value:(_vm.code),callback:function ($$v) {_vm.code=$$v},expression:\"code\"}})],1)])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-container>\r\n    <v-row style=\"height:calc(100vh - 150px)\">\r\n      <v-col cols=\"2\">\r\n        <v-list>\r\n          <v-list-item-group v-model=\"model\">\r\n            <v-list-item v-for=\"(item, i) in items\" :key=\"i\">\r\n              <v-list-item-icon>\r\n                <v-icon v-text=\"item.icon\"></v-icon>\r\n              </v-list-item-icon>\r\n              <v-list-item-content>\r\n                <v-list-item-title v-text=\"item.text\"></v-list-item-title>\r\n              </v-list-item-content>\r\n            </v-list-item>\r\n          </v-list-item-group>\r\n        </v-list>\r\n      </v-col>\r\n      <v-col cols=\"10\" style=\"position:relative;height:100%;\">\r\n        <div class=\"button-area\">\r\n          <v-btn small color=\"primary\">Save</v-btn>\r\n          <v-btn small color=\"primary\">BackTest</v-btn>\r\n        </div>\r\n\r\n        <div class=\"code\">\r\n          <codemirror\r\n            style=\"height:100%;\"\r\n            v-model=\"code\"\r\n            :options=\"cmOptions\"\r\n          />\r\n        </div>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\n// import language js\r\nimport 'codemirror/mode/javascript/javascript.js'\r\n// import theme style\r\nimport 'codemirror/theme/base16-dark.css'\r\n\r\nexport default {\r\n  components: {},\r\n  methods: {\r\n    openDetail(item) {\r\n      this.$refs.detail.open(item)\r\n    }\r\n  },\r\n  data: () => ({\r\n    code: 'const a = 1',\r\n    cmOptions: {\r\n      tabSize: 4,\r\n      mode: 'text/javascript',\r\n      theme: 'base16-dark',\r\n      lineNumbers: true,\r\n      line: true\r\n      // more CodeMirror options...\r\n    },\r\n    items: [\r\n      {\r\n        icon: 'mdi-inbox',\r\n        text: 'algo1'\r\n      },\r\n      {\r\n        icon: 'mdi-star',\r\n        text: 'algo2'\r\n      },\r\n      {\r\n        icon: 'mdi-send',\r\n        text: 'algo3'\r\n      },\r\n      {\r\n        icon: 'mdi-email-open',\r\n        text: 'algo3'\r\n      }\r\n    ],\r\n    model: 1\r\n  })\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n@buttonareaHeight: 30px;\r\n.button-area {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  height: @buttonareaHeight;\r\n}\r\n.code {\r\n  width: 100%;\r\n  height: calc(100% - @buttonareaHeight);\r\n  ::v-deep .CodeMirror {\r\n    height: 100%;\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Index.vue?vue&type=template&id=646ea93c&scoped=true&\"\nimport script from \"./Index.vue?vue&type=script&lang=js&\"\nexport * from \"./Index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Index.vue?vue&type=style&index=0&id=646ea93c&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"646ea93c\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VList } from 'vuetify/lib/components/VList';\nimport { VListItem } from 'vuetify/lib/components/VList';\nimport { VListItemContent } from 'vuetify/lib/components/VList';\nimport { VListItemGroup } from 'vuetify/lib/components/VList';\nimport { VListItemIcon } from 'vuetify/lib/components/VList';\nimport { VListItemTitle } from 'vuetify/lib/components/VList';\nimport { VRow } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VBtn,VCol,VContainer,VIcon,VList,VListItem,VListItemContent,VListItemGroup,VListItemIcon,VListItemTitle,VRow})\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"javascript\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit;\n  var statementIndent = parserConfig.statementIndent;\n  var jsonldMode = parserConfig.jsonld;\n  var jsonMode = parserConfig.json || jsonldMode;\n  var isTS = parserConfig.typescript;\n  var wordRE = parserConfig.wordCharacters || /[\\w$\\xa1-\\uffff]/;\n\n  // Tokenizer\n\n  var keywords = function(){\n    function kw(type) {return {type: type, style: \"keyword\"};}\n    var A = kw(\"keyword a\"), B = kw(\"keyword b\"), C = kw(\"keyword c\"), D = kw(\"keyword d\");\n    var operator = kw(\"operator\"), atom = {type: \"atom\", style: \"atom\"};\n\n    return {\n      \"if\": kw(\"if\"), \"while\": A, \"with\": A, \"else\": B, \"do\": B, \"try\": B, \"finally\": B,\n      \"return\": D, \"break\": D, \"continue\": D, \"new\": kw(\"new\"), \"delete\": C, \"void\": C, \"throw\": C,\n      \"debugger\": kw(\"debugger\"), \"var\": kw(\"var\"), \"const\": kw(\"var\"), \"let\": kw(\"var\"),\n      \"function\": kw(\"function\"), \"catch\": kw(\"catch\"),\n      \"for\": kw(\"for\"), \"switch\": kw(\"switch\"), \"case\": kw(\"case\"), \"default\": kw(\"default\"),\n      \"in\": operator, \"typeof\": operator, \"instanceof\": operator,\n      \"true\": atom, \"false\": atom, \"null\": atom, \"undefined\": atom, \"NaN\": atom, \"Infinity\": atom,\n      \"this\": kw(\"this\"), \"class\": kw(\"class\"), \"super\": kw(\"atom\"),\n      \"yield\": C, \"export\": kw(\"export\"), \"import\": kw(\"import\"), \"extends\": C,\n      \"await\": C\n    };\n  }();\n\n  var isOperatorChar = /[+\\-*&%=<>!?|~^@]/;\n  var isJsonldKeyword = /^@(context|id|value|language|type|container|list|set|reverse|index|base|vocab|graph)\"/;\n\n  function readRegexp(stream) {\n    var escaped = false, next, inSet = false;\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (next == \"/\" && !inSet) return;\n        if (next == \"[\") inSet = true;\n        else if (inSet && next == \"]\") inSet = false;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n  }\n\n  // Used as scratch variables to communicate multiple values without\n  // consing up tons of objects.\n  var type, content;\n  function ret(tp, style, cont) {\n    type = tp; content = cont;\n    return style;\n  }\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (ch == '\"' || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    } else if (ch == \".\" && stream.match(/^\\d[\\d_]*(?:[eE][+\\-]?[\\d_]+)?/)) {\n      return ret(\"number\", \"number\");\n    } else if (ch == \".\" && stream.match(\"..\")) {\n      return ret(\"spread\", \"meta\");\n    } else if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      return ret(ch);\n    } else if (ch == \"=\" && stream.eat(\">\")) {\n      return ret(\"=>\", \"operator\");\n    } else if (ch == \"0\" && stream.match(/^(?:x[\\dA-Fa-f_]+|o[0-7_]+|b[01_]+)n?/)) {\n      return ret(\"number\", \"number\");\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:n|(?:\\.[\\d_]*)?(?:[eE][+\\-]?[\\d_]+)?)?/);\n      return ret(\"number\", \"number\");\n    } else if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      } else if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return ret(\"comment\", \"comment\");\n      } else if (expressionAllowed(stream, state, 1)) {\n        readRegexp(stream);\n        stream.match(/^\\b(([gimyus])(?![gimyus]*\\2))+\\b/);\n        return ret(\"regexp\", \"string-2\");\n      } else {\n        stream.eat(\"=\");\n        return ret(\"operator\", \"operator\", stream.current());\n      }\n    } else if (ch == \"`\") {\n      state.tokenize = tokenQuasi;\n      return tokenQuasi(stream, state);\n    } else if (ch == \"#\" && stream.peek() == \"!\") {\n      stream.skipToEnd();\n      return ret(\"meta\", \"meta\");\n    } else if (ch == \"#\" && stream.eatWhile(wordRE)) {\n      return ret(\"variable\", \"property\")\n    } else if (ch == \"<\" && stream.match(\"!--\") ||\n               (ch == \"-\" && stream.match(\"->\") && !/\\S/.test(stream.string.slice(0, stream.start)))) {\n      stream.skipToEnd()\n      return ret(\"comment\", \"comment\")\n    } else if (isOperatorChar.test(ch)) {\n      if (ch != \">\" || !state.lexical || state.lexical.type != \">\") {\n        if (stream.eat(\"=\")) {\n          if (ch == \"!\" || ch == \"=\") stream.eat(\"=\")\n        } else if (/[<>*+\\-|&?]/.test(ch)) {\n          stream.eat(ch)\n          if (ch == \">\") stream.eat(ch)\n        }\n      }\n      if (ch == \"?\" && stream.eat(\".\")) return ret(\".\")\n      return ret(\"operator\", \"operator\", stream.current());\n    } else if (wordRE.test(ch)) {\n      stream.eatWhile(wordRE);\n      var word = stream.current()\n      if (state.lastType != \".\") {\n        if (keywords.propertyIsEnumerable(word)) {\n          var kw = keywords[word]\n          return ret(kw.type, kw.style, word)\n        }\n        if (word == \"async\" && stream.match(/^(\\s|\\/\\*.*?\\*\\/)*[\\[\\(\\w]/, false))\n          return ret(\"async\", \"keyword\", word)\n      }\n      return ret(\"variable\", \"variable\", word)\n    }\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next;\n      if (jsonldMode && stream.peek() == \"@\" && stream.match(isJsonldKeyword)){\n        state.tokenize = tokenBase;\n        return ret(\"jsonld-keyword\", \"meta\");\n      }\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) break;\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (!escaped) state.tokenize = tokenBase;\n      return ret(\"string\", \"string\");\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return ret(\"comment\", \"comment\");\n  }\n\n  function tokenQuasi(stream, state) {\n    var escaped = false, next;\n    while ((next = stream.next()) != null) {\n      if (!escaped && (next == \"`\" || next == \"$\" && stream.eat(\"{\"))) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    return ret(\"quasi\", \"string-2\", stream.current());\n  }\n\n  var brackets = \"([{}])\";\n  // This is a crude lookahead trick to try and notice that we're\n  // parsing the argument patterns for a fat-arrow function before we\n  // actually hit the arrow token. It only works if the arrow is on\n  // the same line as the arguments and there's no strange noise\n  // (comments) in between. Fallback is to only notice when we hit the\n  // arrow, and not declare the arguments as locals for the arrow\n  // body.\n  function findFatArrow(stream, state) {\n    if (state.fatArrowAt) state.fatArrowAt = null;\n    var arrow = stream.string.indexOf(\"=>\", stream.start);\n    if (arrow < 0) return;\n\n    if (isTS) { // Try to skip TypeScript return type declarations after the arguments\n      var m = /:\\s*(?:\\w+(?:<[^>]*>|\\[\\])?|\\{[^}]*\\})\\s*$/.exec(stream.string.slice(stream.start, arrow))\n      if (m) arrow = m.index\n    }\n\n    var depth = 0, sawSomething = false;\n    for (var pos = arrow - 1; pos >= 0; --pos) {\n      var ch = stream.string.charAt(pos);\n      var bracket = brackets.indexOf(ch);\n      if (bracket >= 0 && bracket < 3) {\n        if (!depth) { ++pos; break; }\n        if (--depth == 0) { if (ch == \"(\") sawSomething = true; break; }\n      } else if (bracket >= 3 && bracket < 6) {\n        ++depth;\n      } else if (wordRE.test(ch)) {\n        sawSomething = true;\n      } else if (/[\"'\\/`]/.test(ch)) {\n        for (;; --pos) {\n          if (pos == 0) return\n          var next = stream.string.charAt(pos - 1)\n          if (next == ch && stream.string.charAt(pos - 2) != \"\\\\\") { pos--; break }\n        }\n      } else if (sawSomething && !depth) {\n        ++pos;\n        break;\n      }\n    }\n    if (sawSomething && !depth) state.fatArrowAt = pos;\n  }\n\n  // Parser\n\n  var atomicTypes = {\"atom\": true, \"number\": true, \"variable\": true, \"string\": true, \"regexp\": true, \"this\": true, \"jsonld-keyword\": true};\n\n  function JSLexical(indented, column, type, align, prev, info) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.prev = prev;\n    this.info = info;\n    if (align != null) this.align = align;\n  }\n\n  function inScope(state, varname) {\n    for (var v = state.localVars; v; v = v.next)\n      if (v.name == varname) return true;\n    for (var cx = state.context; cx; cx = cx.prev) {\n      for (var v = cx.vars; v; v = v.next)\n        if (v.name == varname) return true;\n    }\n  }\n\n  function parseJS(state, style, type, content, stream) {\n    var cc = state.cc;\n    // Communicate our context to the combinators.\n    // (Less wasteful than consing up a hundred closures on every call.)\n    cx.state = state; cx.stream = stream; cx.marked = null, cx.cc = cc; cx.style = style;\n\n    if (!state.lexical.hasOwnProperty(\"align\"))\n      state.lexical.align = true;\n\n    while(true) {\n      var combinator = cc.length ? cc.pop() : jsonMode ? expression : statement;\n      if (combinator(type, content)) {\n        while(cc.length && cc[cc.length - 1].lex)\n          cc.pop()();\n        if (cx.marked) return cx.marked;\n        if (type == \"variable\" && inScope(state, content)) return \"variable-2\";\n        return style;\n      }\n    }\n  }\n\n  // Combinator utils\n\n  var cx = {state: null, column: null, marked: null, cc: null};\n  function pass() {\n    for (var i = arguments.length - 1; i >= 0; i--) cx.cc.push(arguments[i]);\n  }\n  function cont() {\n    pass.apply(null, arguments);\n    return true;\n  }\n  function inList(name, list) {\n    for (var v = list; v; v = v.next) if (v.name == name) return true\n    return false;\n  }\n  function register(varname) {\n    var state = cx.state;\n    cx.marked = \"def\";\n    if (state.context) {\n      if (state.lexical.info == \"var\" && state.context && state.context.block) {\n        // FIXME function decls are also not block scoped\n        var newContext = registerVarScoped(varname, state.context)\n        if (newContext != null) {\n          state.context = newContext\n          return\n        }\n      } else if (!inList(varname, state.localVars)) {\n        state.localVars = new Var(varname, state.localVars)\n        return\n      }\n    }\n    // Fall through means this is global\n    if (parserConfig.globalVars && !inList(varname, state.globalVars))\n      state.globalVars = new Var(varname, state.globalVars)\n  }\n  function registerVarScoped(varname, context) {\n    if (!context) {\n      return null\n    } else if (context.block) {\n      var inner = registerVarScoped(varname, context.prev)\n      if (!inner) return null\n      if (inner == context.prev) return context\n      return new Context(inner, context.vars, true)\n    } else if (inList(varname, context.vars)) {\n      return context\n    } else {\n      return new Context(context.prev, new Var(varname, context.vars), false)\n    }\n  }\n\n  function isModifier(name) {\n    return name == \"public\" || name == \"private\" || name == \"protected\" || name == \"abstract\" || name == \"readonly\"\n  }\n\n  // Combinators\n\n  function Context(prev, vars, block) { this.prev = prev; this.vars = vars; this.block = block }\n  function Var(name, next) { this.name = name; this.next = next }\n\n  var defaultVars = new Var(\"this\", new Var(\"arguments\", null))\n  function pushcontext() {\n    cx.state.context = new Context(cx.state.context, cx.state.localVars, false)\n    cx.state.localVars = defaultVars\n  }\n  function pushblockcontext() {\n    cx.state.context = new Context(cx.state.context, cx.state.localVars, true)\n    cx.state.localVars = null\n  }\n  function popcontext() {\n    cx.state.localVars = cx.state.context.vars\n    cx.state.context = cx.state.context.prev\n  }\n  popcontext.lex = true\n  function pushlex(type, info) {\n    var result = function() {\n      var state = cx.state, indent = state.indented;\n      if (state.lexical.type == \"stat\") indent = state.lexical.indented;\n      else for (var outer = state.lexical; outer && outer.type == \")\" && outer.align; outer = outer.prev)\n        indent = outer.indented;\n      state.lexical = new JSLexical(indent, cx.stream.column(), type, null, state.lexical, info);\n    };\n    result.lex = true;\n    return result;\n  }\n  function poplex() {\n    var state = cx.state;\n    if (state.lexical.prev) {\n      if (state.lexical.type == \")\")\n        state.indented = state.lexical.indented;\n      state.lexical = state.lexical.prev;\n    }\n  }\n  poplex.lex = true;\n\n  function expect(wanted) {\n    function exp(type) {\n      if (type == wanted) return cont();\n      else if (wanted == \";\" || type == \"}\" || type == \")\" || type == \"]\") return pass();\n      else return cont(exp);\n    };\n    return exp;\n  }\n\n  function statement(type, value) {\n    if (type == \"var\") return cont(pushlex(\"vardef\", value), vardef, expect(\";\"), poplex);\n    if (type == \"keyword a\") return cont(pushlex(\"form\"), parenExpr, statement, poplex);\n    if (type == \"keyword b\") return cont(pushlex(\"form\"), statement, poplex);\n    if (type == \"keyword d\") return cx.stream.match(/^\\s*$/, false) ? cont() : cont(pushlex(\"stat\"), maybeexpression, expect(\";\"), poplex);\n    if (type == \"debugger\") return cont(expect(\";\"));\n    if (type == \"{\") return cont(pushlex(\"}\"), pushblockcontext, block, poplex, popcontext);\n    if (type == \";\") return cont();\n    if (type == \"if\") {\n      if (cx.state.lexical.info == \"else\" && cx.state.cc[cx.state.cc.length - 1] == poplex)\n        cx.state.cc.pop()();\n      return cont(pushlex(\"form\"), parenExpr, statement, poplex, maybeelse);\n    }\n    if (type == \"function\") return cont(functiondef);\n    if (type == \"for\") return cont(pushlex(\"form\"), forspec, statement, poplex);\n    if (type == \"class\" || (isTS && value == \"interface\")) {\n      cx.marked = \"keyword\"\n      return cont(pushlex(\"form\", type == \"class\" ? type : value), className, poplex)\n    }\n    if (type == \"variable\") {\n      if (isTS && value == \"declare\") {\n        cx.marked = \"keyword\"\n        return cont(statement)\n      } else if (isTS && (value == \"module\" || value == \"enum\" || value == \"type\") && cx.stream.match(/^\\s*\\w/, false)) {\n        cx.marked = \"keyword\"\n        if (value == \"enum\") return cont(enumdef);\n        else if (value == \"type\") return cont(typename, expect(\"operator\"), typeexpr, expect(\";\"));\n        else return cont(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), block, poplex, poplex)\n      } else if (isTS && value == \"namespace\") {\n        cx.marked = \"keyword\"\n        return cont(pushlex(\"form\"), expression, statement, poplex)\n      } else if (isTS && value == \"abstract\") {\n        cx.marked = \"keyword\"\n        return cont(statement)\n      } else {\n        return cont(pushlex(\"stat\"), maybelabel);\n      }\n    }\n    if (type == \"switch\") return cont(pushlex(\"form\"), parenExpr, expect(\"{\"), pushlex(\"}\", \"switch\"), pushblockcontext,\n                                      block, poplex, poplex, popcontext);\n    if (type == \"case\") return cont(expression, expect(\":\"));\n    if (type == \"default\") return cont(expect(\":\"));\n    if (type == \"catch\") return cont(pushlex(\"form\"), pushcontext, maybeCatchBinding, statement, poplex, popcontext);\n    if (type == \"export\") return cont(pushlex(\"stat\"), afterExport, poplex);\n    if (type == \"import\") return cont(pushlex(\"stat\"), afterImport, poplex);\n    if (type == \"async\") return cont(statement)\n    if (value == \"@\") return cont(expression, statement)\n    return pass(pushlex(\"stat\"), expression, expect(\";\"), poplex);\n  }\n  function maybeCatchBinding(type) {\n    if (type == \"(\") return cont(funarg, expect(\")\"))\n  }\n  function expression(type, value) {\n    return expressionInner(type, value, false);\n  }\n  function expressionNoComma(type, value) {\n    return expressionInner(type, value, true);\n  }\n  function parenExpr(type) {\n    if (type != \"(\") return pass()\n    return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex)\n  }\n  function expressionInner(type, value, noComma) {\n    if (cx.state.fatArrowAt == cx.stream.start) {\n      var body = noComma ? arrowBodyNoComma : arrowBody;\n      if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, expect(\"=>\"), body, popcontext);\n      else if (type == \"variable\") return pass(pushcontext, pattern, expect(\"=>\"), body, popcontext);\n    }\n\n    var maybeop = noComma ? maybeoperatorNoComma : maybeoperatorComma;\n    if (atomicTypes.hasOwnProperty(type)) return cont(maybeop);\n    if (type == \"function\") return cont(functiondef, maybeop);\n    if (type == \"class\" || (isTS && value == \"interface\")) { cx.marked = \"keyword\"; return cont(pushlex(\"form\"), classExpression, poplex); }\n    if (type == \"keyword c\" || type == \"async\") return cont(noComma ? expressionNoComma : expression);\n    if (type == \"(\") return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex, maybeop);\n    if (type == \"operator\" || type == \"spread\") return cont(noComma ? expressionNoComma : expression);\n    if (type == \"[\") return cont(pushlex(\"]\"), arrayLiteral, poplex, maybeop);\n    if (type == \"{\") return contCommasep(objprop, \"}\", null, maybeop);\n    if (type == \"quasi\") return pass(quasi, maybeop);\n    if (type == \"new\") return cont(maybeTarget(noComma));\n    if (type == \"import\") return cont(expression);\n    return cont();\n  }\n  function maybeexpression(type) {\n    if (type.match(/[;\\}\\)\\],]/)) return pass();\n    return pass(expression);\n  }\n\n  function maybeoperatorComma(type, value) {\n    if (type == \",\") return cont(maybeexpression);\n    return maybeoperatorNoComma(type, value, false);\n  }\n  function maybeoperatorNoComma(type, value, noComma) {\n    var me = noComma == false ? maybeoperatorComma : maybeoperatorNoComma;\n    var expr = noComma == false ? expression : expressionNoComma;\n    if (type == \"=>\") return cont(pushcontext, noComma ? arrowBodyNoComma : arrowBody, popcontext);\n    if (type == \"operator\") {\n      if (/\\+\\+|--/.test(value) || isTS && value == \"!\") return cont(me);\n      if (isTS && value == \"<\" && cx.stream.match(/^([^<>]|<[^<>]*>)*>\\s*\\(/, false))\n        return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, me);\n      if (value == \"?\") return cont(expression, expect(\":\"), expr);\n      return cont(expr);\n    }\n    if (type == \"quasi\") { return pass(quasi, me); }\n    if (type == \";\") return;\n    if (type == \"(\") return contCommasep(expressionNoComma, \")\", \"call\", me);\n    if (type == \".\") return cont(property, me);\n    if (type == \"[\") return cont(pushlex(\"]\"), maybeexpression, expect(\"]\"), poplex, me);\n    if (isTS && value == \"as\") { cx.marked = \"keyword\"; return cont(typeexpr, me) }\n    if (type == \"regexp\") {\n      cx.state.lastType = cx.marked = \"operator\"\n      cx.stream.backUp(cx.stream.pos - cx.stream.start - 1)\n      return cont(expr)\n    }\n  }\n  function quasi(type, value) {\n    if (type != \"quasi\") return pass();\n    if (value.slice(value.length - 2) != \"${\") return cont(quasi);\n    return cont(expression, continueQuasi);\n  }\n  function continueQuasi(type) {\n    if (type == \"}\") {\n      cx.marked = \"string-2\";\n      cx.state.tokenize = tokenQuasi;\n      return cont(quasi);\n    }\n  }\n  function arrowBody(type) {\n    findFatArrow(cx.stream, cx.state);\n    return pass(type == \"{\" ? statement : expression);\n  }\n  function arrowBodyNoComma(type) {\n    findFatArrow(cx.stream, cx.state);\n    return pass(type == \"{\" ? statement : expressionNoComma);\n  }\n  function maybeTarget(noComma) {\n    return function(type) {\n      if (type == \".\") return cont(noComma ? targetNoComma : target);\n      else if (type == \"variable\" && isTS) return cont(maybeTypeArgs, noComma ? maybeoperatorNoComma : maybeoperatorComma)\n      else return pass(noComma ? expressionNoComma : expression);\n    };\n  }\n  function target(_, value) {\n    if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorComma); }\n  }\n  function targetNoComma(_, value) {\n    if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorNoComma); }\n  }\n  function maybelabel(type) {\n    if (type == \":\") return cont(poplex, statement);\n    return pass(maybeoperatorComma, expect(\";\"), poplex);\n  }\n  function property(type) {\n    if (type == \"variable\") {cx.marked = \"property\"; return cont();}\n  }\n  function objprop(type, value) {\n    if (type == \"async\") {\n      cx.marked = \"property\";\n      return cont(objprop);\n    } else if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\";\n      if (value == \"get\" || value == \"set\") return cont(getterSetter);\n      var m // Work around fat-arrow-detection complication for detecting typescript typed arrow params\n      if (isTS && cx.state.fatArrowAt == cx.stream.start && (m = cx.stream.match(/^\\s*:\\s*/, false)))\n        cx.state.fatArrowAt = cx.stream.pos + m[0].length\n      return cont(afterprop);\n    } else if (type == \"number\" || type == \"string\") {\n      cx.marked = jsonldMode ? \"property\" : (cx.style + \" property\");\n      return cont(afterprop);\n    } else if (type == \"jsonld-keyword\") {\n      return cont(afterprop);\n    } else if (isTS && isModifier(value)) {\n      cx.marked = \"keyword\"\n      return cont(objprop)\n    } else if (type == \"[\") {\n      return cont(expression, maybetype, expect(\"]\"), afterprop);\n    } else if (type == \"spread\") {\n      return cont(expressionNoComma, afterprop);\n    } else if (value == \"*\") {\n      cx.marked = \"keyword\";\n      return cont(objprop);\n    } else if (type == \":\") {\n      return pass(afterprop)\n    }\n  }\n  function getterSetter(type) {\n    if (type != \"variable\") return pass(afterprop);\n    cx.marked = \"property\";\n    return cont(functiondef);\n  }\n  function afterprop(type) {\n    if (type == \":\") return cont(expressionNoComma);\n    if (type == \"(\") return pass(functiondef);\n  }\n  function commasep(what, end, sep) {\n    function proceed(type, value) {\n      if (sep ? sep.indexOf(type) > -1 : type == \",\") {\n        var lex = cx.state.lexical;\n        if (lex.info == \"call\") lex.pos = (lex.pos || 0) + 1;\n        return cont(function(type, value) {\n          if (type == end || value == end) return pass()\n          return pass(what)\n        }, proceed);\n      }\n      if (type == end || value == end) return cont();\n      if (sep && sep.indexOf(\";\") > -1) return pass(what)\n      return cont(expect(end));\n    }\n    return function(type, value) {\n      if (type == end || value == end) return cont();\n      return pass(what, proceed);\n    };\n  }\n  function contCommasep(what, end, info) {\n    for (var i = 3; i < arguments.length; i++)\n      cx.cc.push(arguments[i]);\n    return cont(pushlex(end, info), commasep(what, end), poplex);\n  }\n  function block(type) {\n    if (type == \"}\") return cont();\n    return pass(statement, block);\n  }\n  function maybetype(type, value) {\n    if (isTS) {\n      if (type == \":\") return cont(typeexpr);\n      if (value == \"?\") return cont(maybetype);\n    }\n  }\n  function maybetypeOrIn(type, value) {\n    if (isTS && (type == \":\" || value == \"in\")) return cont(typeexpr)\n  }\n  function mayberettype(type) {\n    if (isTS && type == \":\") {\n      if (cx.stream.match(/^\\s*\\w+\\s+is\\b/, false)) return cont(expression, isKW, typeexpr)\n      else return cont(typeexpr)\n    }\n  }\n  function isKW(_, value) {\n    if (value == \"is\") {\n      cx.marked = \"keyword\"\n      return cont()\n    }\n  }\n  function typeexpr(type, value) {\n    if (value == \"keyof\" || value == \"typeof\" || value == \"infer\") {\n      cx.marked = \"keyword\"\n      return cont(value == \"typeof\" ? expressionNoComma : typeexpr)\n    }\n    if (type == \"variable\" || value == \"void\") {\n      cx.marked = \"type\"\n      return cont(afterType)\n    }\n    if (value == \"|\" || value == \"&\") return cont(typeexpr)\n    if (type == \"string\" || type == \"number\" || type == \"atom\") return cont(afterType);\n    if (type == \"[\") return cont(pushlex(\"]\"), commasep(typeexpr, \"]\", \",\"), poplex, afterType)\n    if (type == \"{\") return cont(pushlex(\"}\"), commasep(typeprop, \"}\", \",;\"), poplex, afterType)\n    if (type == \"(\") return cont(commasep(typearg, \")\"), maybeReturnType, afterType)\n    if (type == \"<\") return cont(commasep(typeexpr, \">\"), typeexpr)\n  }\n  function maybeReturnType(type) {\n    if (type == \"=>\") return cont(typeexpr)\n  }\n  function typeprop(type, value) {\n    if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\"\n      return cont(typeprop)\n    } else if (value == \"?\" || type == \"number\" || type == \"string\") {\n      return cont(typeprop)\n    } else if (type == \":\") {\n      return cont(typeexpr)\n    } else if (type == \"[\") {\n      return cont(expect(\"variable\"), maybetypeOrIn, expect(\"]\"), typeprop)\n    } else if (type == \"(\") {\n      return pass(functiondecl, typeprop)\n    }\n  }\n  function typearg(type, value) {\n    if (type == \"variable\" && cx.stream.match(/^\\s*[?:]/, false) || value == \"?\") return cont(typearg)\n    if (type == \":\") return cont(typeexpr)\n    if (type == \"spread\") return cont(typearg)\n    return pass(typeexpr)\n  }\n  function afterType(type, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\n    if (value == \"|\" || type == \".\" || value == \"&\") return cont(typeexpr)\n    if (type == \"[\") return cont(typeexpr, expect(\"]\"), afterType)\n    if (value == \"extends\" || value == \"implements\") { cx.marked = \"keyword\"; return cont(typeexpr) }\n    if (value == \"?\") return cont(typeexpr, expect(\":\"), typeexpr)\n  }\n  function maybeTypeArgs(_, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\n  }\n  function typeparam() {\n    return pass(typeexpr, maybeTypeDefault)\n  }\n  function maybeTypeDefault(_, value) {\n    if (value == \"=\") return cont(typeexpr)\n  }\n  function vardef(_, value) {\n    if (value == \"enum\") {cx.marked = \"keyword\"; return cont(enumdef)}\n    return pass(pattern, maybetype, maybeAssign, vardefCont);\n  }\n  function pattern(type, value) {\n    if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(pattern) }\n    if (type == \"variable\") { register(value); return cont(); }\n    if (type == \"spread\") return cont(pattern);\n    if (type == \"[\") return contCommasep(eltpattern, \"]\");\n    if (type == \"{\") return contCommasep(proppattern, \"}\");\n  }\n  function proppattern(type, value) {\n    if (type == \"variable\" && !cx.stream.match(/^\\s*:/, false)) {\n      register(value);\n      return cont(maybeAssign);\n    }\n    if (type == \"variable\") cx.marked = \"property\";\n    if (type == \"spread\") return cont(pattern);\n    if (type == \"}\") return pass();\n    if (type == \"[\") return cont(expression, expect(']'), expect(':'), proppattern);\n    return cont(expect(\":\"), pattern, maybeAssign);\n  }\n  function eltpattern() {\n    return pass(pattern, maybeAssign)\n  }\n  function maybeAssign(_type, value) {\n    if (value == \"=\") return cont(expressionNoComma);\n  }\n  function vardefCont(type) {\n    if (type == \",\") return cont(vardef);\n  }\n  function maybeelse(type, value) {\n    if (type == \"keyword b\" && value == \"else\") return cont(pushlex(\"form\", \"else\"), statement, poplex);\n  }\n  function forspec(type, value) {\n    if (value == \"await\") return cont(forspec);\n    if (type == \"(\") return cont(pushlex(\")\"), forspec1, poplex);\n  }\n  function forspec1(type) {\n    if (type == \"var\") return cont(vardef, forspec2);\n    if (type == \"variable\") return cont(forspec2);\n    return pass(forspec2)\n  }\n  function forspec2(type, value) {\n    if (type == \")\") return cont()\n    if (type == \";\") return cont(forspec2)\n    if (value == \"in\" || value == \"of\") { cx.marked = \"keyword\"; return cont(expression, forspec2) }\n    return pass(expression, forspec2)\n  }\n  function functiondef(type, value) {\n    if (value == \"*\") {cx.marked = \"keyword\"; return cont(functiondef);}\n    if (type == \"variable\") {register(value); return cont(functiondef);}\n    if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, mayberettype, statement, popcontext);\n    if (isTS && value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, functiondef)\n  }\n  function functiondecl(type, value) {\n    if (value == \"*\") {cx.marked = \"keyword\"; return cont(functiondecl);}\n    if (type == \"variable\") {register(value); return cont(functiondecl);}\n    if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, mayberettype, popcontext);\n    if (isTS && value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, functiondecl)\n  }\n  function typename(type, value) {\n    if (type == \"keyword\" || type == \"variable\") {\n      cx.marked = \"type\"\n      return cont(typename)\n    } else if (value == \"<\") {\n      return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex)\n    }\n  }\n  function funarg(type, value) {\n    if (value == \"@\") cont(expression, funarg)\n    if (type == \"spread\") return cont(funarg);\n    if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(funarg); }\n    if (isTS && type == \"this\") return cont(maybetype, maybeAssign)\n    return pass(pattern, maybetype, maybeAssign);\n  }\n  function classExpression(type, value) {\n    // Class expressions may have an optional name.\n    if (type == \"variable\") return className(type, value);\n    return classNameAfter(type, value);\n  }\n  function className(type, value) {\n    if (type == \"variable\") {register(value); return cont(classNameAfter);}\n  }\n  function classNameAfter(type, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, classNameAfter)\n    if (value == \"extends\" || value == \"implements\" || (isTS && type == \",\")) {\n      if (value == \"implements\") cx.marked = \"keyword\";\n      return cont(isTS ? typeexpr : expression, classNameAfter);\n    }\n    if (type == \"{\") return cont(pushlex(\"}\"), classBody, poplex);\n  }\n  function classBody(type, value) {\n    if (type == \"async\" ||\n        (type == \"variable\" &&\n         (value == \"static\" || value == \"get\" || value == \"set\" || (isTS && isModifier(value))) &&\n         cx.stream.match(/^\\s+[\\w$\\xa1-\\uffff]/, false))) {\n      cx.marked = \"keyword\";\n      return cont(classBody);\n    }\n    if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\";\n      return cont(classfield, classBody);\n    }\n    if (type == \"number\" || type == \"string\") return cont(classfield, classBody);\n    if (type == \"[\")\n      return cont(expression, maybetype, expect(\"]\"), classfield, classBody)\n    if (value == \"*\") {\n      cx.marked = \"keyword\";\n      return cont(classBody);\n    }\n    if (isTS && type == \"(\") return pass(functiondecl, classBody)\n    if (type == \";\" || type == \",\") return cont(classBody);\n    if (type == \"}\") return cont();\n    if (value == \"@\") return cont(expression, classBody)\n  }\n  function classfield(type, value) {\n    if (value == \"?\") return cont(classfield)\n    if (type == \":\") return cont(typeexpr, maybeAssign)\n    if (value == \"=\") return cont(expressionNoComma)\n    var context = cx.state.lexical.prev, isInterface = context && context.info == \"interface\"\n    return pass(isInterface ? functiondecl : functiondef)\n  }\n  function afterExport(type, value) {\n    if (value == \"*\") { cx.marked = \"keyword\"; return cont(maybeFrom, expect(\";\")); }\n    if (value == \"default\") { cx.marked = \"keyword\"; return cont(expression, expect(\";\")); }\n    if (type == \"{\") return cont(commasep(exportField, \"}\"), maybeFrom, expect(\";\"));\n    return pass(statement);\n  }\n  function exportField(type, value) {\n    if (value == \"as\") { cx.marked = \"keyword\"; return cont(expect(\"variable\")); }\n    if (type == \"variable\") return pass(expressionNoComma, exportField);\n  }\n  function afterImport(type) {\n    if (type == \"string\") return cont();\n    if (type == \"(\") return pass(expression);\n    return pass(importSpec, maybeMoreImports, maybeFrom);\n  }\n  function importSpec(type, value) {\n    if (type == \"{\") return contCommasep(importSpec, \"}\");\n    if (type == \"variable\") register(value);\n    if (value == \"*\") cx.marked = \"keyword\";\n    return cont(maybeAs);\n  }\n  function maybeMoreImports(type) {\n    if (type == \",\") return cont(importSpec, maybeMoreImports)\n  }\n  function maybeAs(_type, value) {\n    if (value == \"as\") { cx.marked = \"keyword\"; return cont(importSpec); }\n  }\n  function maybeFrom(_type, value) {\n    if (value == \"from\") { cx.marked = \"keyword\"; return cont(expression); }\n  }\n  function arrayLiteral(type) {\n    if (type == \"]\") return cont();\n    return pass(commasep(expressionNoComma, \"]\"));\n  }\n  function enumdef() {\n    return pass(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), commasep(enummember, \"}\"), poplex, poplex)\n  }\n  function enummember() {\n    return pass(pattern, maybeAssign);\n  }\n\n  function isContinuedStatement(state, textAfter) {\n    return state.lastType == \"operator\" || state.lastType == \",\" ||\n      isOperatorChar.test(textAfter.charAt(0)) ||\n      /[,.]/.test(textAfter.charAt(0));\n  }\n\n  function expressionAllowed(stream, state, backUp) {\n    return state.tokenize == tokenBase &&\n      /^(?:operator|sof|keyword [bcd]|case|new|export|default|spread|[\\[{}\\(,;:]|=>)$/.test(state.lastType) ||\n      (state.lastType == \"quasi\" && /\\{\\s*$/.test(stream.string.slice(0, stream.pos - (backUp || 0))))\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      var state = {\n        tokenize: tokenBase,\n        lastType: \"sof\",\n        cc: [],\n        lexical: new JSLexical((basecolumn || 0) - indentUnit, 0, \"block\", false),\n        localVars: parserConfig.localVars,\n        context: parserConfig.localVars && new Context(null, null, false),\n        indented: basecolumn || 0\n      };\n      if (parserConfig.globalVars && typeof parserConfig.globalVars == \"object\")\n        state.globalVars = parserConfig.globalVars;\n      return state;\n    },\n\n    token: function(stream, state) {\n      if (stream.sol()) {\n        if (!state.lexical.hasOwnProperty(\"align\"))\n          state.lexical.align = false;\n        state.indented = stream.indentation();\n        findFatArrow(stream, state);\n      }\n      if (state.tokenize != tokenComment && stream.eatSpace()) return null;\n      var style = state.tokenize(stream, state);\n      if (type == \"comment\") return style;\n      state.lastType = type == \"operator\" && (content == \"++\" || content == \"--\") ? \"incdec\" : type;\n      return parseJS(state, style, type, content, stream);\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize == tokenComment) return CodeMirror.Pass;\n      if (state.tokenize != tokenBase) return 0;\n      var firstChar = textAfter && textAfter.charAt(0), lexical = state.lexical, top\n      // Kludge to prevent 'maybelse' from blocking lexical scope pops\n      if (!/^\\s*else\\b/.test(textAfter)) for (var i = state.cc.length - 1; i >= 0; --i) {\n        var c = state.cc[i];\n        if (c == poplex) lexical = lexical.prev;\n        else if (c != maybeelse) break;\n      }\n      while ((lexical.type == \"stat\" || lexical.type == \"form\") &&\n             (firstChar == \"}\" || ((top = state.cc[state.cc.length - 1]) &&\n                                   (top == maybeoperatorComma || top == maybeoperatorNoComma) &&\n                                   !/^[,\\.=+\\-*:?[\\(]/.test(textAfter))))\n        lexical = lexical.prev;\n      if (statementIndent && lexical.type == \")\" && lexical.prev.type == \"stat\")\n        lexical = lexical.prev;\n      var type = lexical.type, closing = firstChar == type;\n\n      if (type == \"vardef\") return lexical.indented + (state.lastType == \"operator\" || state.lastType == \",\" ? lexical.info.length + 1 : 0);\n      else if (type == \"form\" && firstChar == \"{\") return lexical.indented;\n      else if (type == \"form\") return lexical.indented + indentUnit;\n      else if (type == \"stat\")\n        return lexical.indented + (isContinuedStatement(state, textAfter) ? statementIndent || indentUnit : 0);\n      else if (lexical.info == \"switch\" && !closing && parserConfig.doubleIndentSwitch != false)\n        return lexical.indented + (/^(?:case|default)\\b/.test(textAfter) ? indentUnit : 2 * indentUnit);\n      else if (lexical.align) return lexical.column + (closing ? 0 : 1);\n      else return lexical.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricInput: /^\\s*(?:case .*?:|default:|\\{|\\})$/,\n    blockCommentStart: jsonMode ? null : \"/*\",\n    blockCommentEnd: jsonMode ? null : \"*/\",\n    blockCommentContinue: jsonMode ? null : \" * \",\n    lineComment: jsonMode ? null : \"//\",\n    fold: \"brace\",\n    closeBrackets: \"()[]{}''\\\"\\\"``\",\n\n    helperType: jsonMode ? \"json\" : \"javascript\",\n    jsonldMode: jsonldMode,\n    jsonMode: jsonMode,\n\n    expressionAllowed: expressionAllowed,\n\n    skipExpression: function(state) {\n      var top = state.cc[state.cc.length - 1]\n      if (top == expression || top == expressionNoComma) state.cc.pop()\n    }\n  };\n});\n\nCodeMirror.registerHelper(\"wordChars\", \"javascript\", /[\\w$]/);\n\nCodeMirror.defineMIME(\"text/javascript\", \"javascript\");\nCodeMirror.defineMIME(\"text/ecmascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/javascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/x-javascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/ecmascript\", \"javascript\");\nCodeMirror.defineMIME(\"application/json\", {name: \"javascript\", json: true});\nCodeMirror.defineMIME(\"application/x-json\", {name: \"javascript\", json: true});\nCodeMirror.defineMIME(\"application/ld+json\", {name: \"javascript\", jsonld: true});\nCodeMirror.defineMIME(\"text/typescript\", { name: \"javascript\", typescript: true });\nCodeMirror.defineMIME(\"application/typescript\", { name: \"javascript\", typescript: true });\n\n});\n"],"sourceRoot":""}